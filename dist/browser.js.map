{"version":3,"file":"browser.js","sources":["../src/helpers.js","../src/index.js"],"sourcesContent":["/**\n * Create a random string.\n * @param {number} length\n * @return {string}\n */\nexport function randomString(length) {\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789',\n        charactersLength = characters.length;\n\n    let result = '';\n\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    return result;\n}\n","import {randomString} from \"./helpers\";\n\nconst\n    _STORAGE = window.localStorage,\n    _KEY_PREFIX = 'ls-',\n    _TTL_SUFFIX = '-ls-ttl',\n    _KEYS = {};\n\n/**\n * Get the localStorage method name.\n * @param {string} name\n * @return {string}\n * @private\n */\nfunction _method(name) {\n    return `${name}Item`;\n}\n\n/**\n * Return the matching key with the prefix.\n * @param {string} key\n * @param {string} prefix\n * @return {string}\n * @private\n */\nfunction _getKey(key, prefix = '') {\n    return prefix + (_KEYS[key] || key);\n}\n\n/** LocalStorage client with TTL and randomised keys. */\nexport default class Ls {\n    constructor(options = {}) {\n        this.options = {\n            keyPrefix: options.keyPrefix || _KEY_PREFIX,\n            ttlSuffix: options.ttlSuffix || _TTL_SUFFIX,\n            encrypt: options.encrypt || null,\n        }\n    }\n\n    /**\n     * Add an entry to the persistent storage.\n     * @param {string} key\n     * @param {*} value         Number or string-convertible data\n     * @param {number} ttl      Time to live in seconds\n     */\n    set(key, value, ttl = 0) {\n        key = _getKey(key, this.options.keyPrefix);\n\n        const set = _method('set');\n\n        if (value && typeof value !== 'string') {\n            value = this._stringify(value);\n        }\n\n        _STORAGE[set](key, value);\n\n        if (ttl > 0) {\n            _STORAGE[set](key + this.options.ttlSuffix, (Date.now() + (ttl * 1000)).toString());\n        }\n    }\n\n    /**\n     * Add an entry by randomising the key.\n     * @param {string} key\n     * @param {*} value         Number or string-convertible data\n     * @param {number} ttl      Time to live in seconds\n     * @return void\n     */\n    setWithRandomKey(key, value, ttl = 0) {\n        const key2 = _getKey(key, this.options.keyPrefix);\n        _KEYS[key] = key2 ? key2 : randomString(16);\n        return this.set(_KEYS[key], value, ttl);\n    }\n\n    /**\n     * Add an entry by encrypting the given key.\n     * @param {string} key\n     * @param {*} value         Number or string-convertible data\n     * @param {number} ttl      Time to live in seconds\n     * @return void\n     */\n    setWithEncryptedKey(key, value, ttl = 0) {\n        _KEYS[key] = this.options.encrypt ? this.options.encrypt(key) : btoa(key);\n        return this.set(_KEYS[key], value, ttl);\n    }\n\n    /**\n     * Get a value from the persistent storage.\n     * @param {string} key\n     * @param {boolean} forget\n     * @return {string|number}\n     */\n    get(key, forget = false) {\n        let key2 = _getKey(key, this.options.keyPrefix);\n\n        const get = _method('get'),\n            isTTLKey = this.isTTLKey(key2),\n            ttl = !isTTLKey ? this.getTTL(key) : parseInt(_STORAGE[get](key2), 10);\n\n        if (ttl && ttl < Date.now()) {\n            key2 = isTTLKey ? key2.replace(this.options.ttlSuffix, '') : key2;\n            this.delete(key2);\n            return void 0;\n        }\n\n        let value = _STORAGE[get](key2);\n\n        if (forget) {\n            this.delete(key2);\n        }\n\n        return value;\n    }\n\n    /**\n     * Check if given key is a TTL key.\n     * @param {string} key\n     * @return {boolean}\n     */\n    isTTLKey(key) {\n        return (new RegExp(`${this.options.ttlSuffix}$`)).test(key)\n    }\n\n    /**\n     * Get the TTL of a saved value.\n     * @param {string} key\n     * @return {number}\n     */\n    getTTL(key) {\n        key = _getKey(key, this.options.keyPrefix);\n\n        let ttl = _STORAGE[_method('get')](key + this.options.ttlSuffix);\n\n        if (!ttl) {\n            return 0;\n        }\n\n        return parseInt(ttl, 10);\n    }\n\n    /**\n     * Remove an entry from the persistent storage.\n     * @param {string|string[]} keys\n     */\n    delete(...keys) {\n        const rm = _method('remove');\n\n        keys.forEach(key => {\n            let k = _getKey(key, this.options.keyPrefix);\n            _STORAGE[rm](k);\n            _STORAGE[rm](k + this.options.ttlSuffix);\n            delete _KEYS[key];\n        });\n    }\n\n    /**\n     * Convert given value to a string.\n     * @param {*} value\n     * @return {string|Number}\n     * @private\n     */\n    _stringify(value) {\n        // Make sure we do not save `undefined` or `null` as string.\n        // LocalStorage only saves and returns strings.\n        if (!value) return '';\n\n        if (typeof value.stringify === 'function') return value.stringify();\n\n        if (typeof value === 'object') return JSON.stringify(value);\n\n        if (typeof value.toString === 'function') return value.toString();\n\n        return value;\n    }\n}\n"],"names":[],"mappings":"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"}