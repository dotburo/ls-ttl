const t={};function e(e){if(function(){try{const t="__random_tmp_key__";return window.localStorage.setItem(t,t),window.localStorage.removeItem(t),!0}catch(t){return!1}}())return window.localStorage[e+"Item"].bind(window.localStorage);switch(e){case"get":return e=>t[e];case"set":return(e,i)=>t[e]=i;case"remove":return e=>delete t[e]}}export default class{constructor(t={}){this.options={keyPrefix:t.keyPrefix||"ls-",ttlSuffix:t.ttlSuffix||"-ls-ttl",encrypt:t.encrypt||null}}set(t,i,n=0){t=this.makeKey(t),i&&"string"!=typeof i&&(i=this._stringify(i)),e("set")(t,i),n>0&&e("set")(t+this.options.ttlSuffix,(Date.now()+1e3*n).toString())}get(t,i=!1){let n=this.makeKey(t);const r=this.isTTLKey(n),o=r?parseInt(e("get")(n),10):this.getTTL(t);if(o&&o<Date.now())return n=r?n.replace(this.options.ttlSuffix,""):n,void this.delete(n);let s=e("get")(n);i&&this.delete(t);try{return JSON.parse(s)}catch(t){return s}}makeKey(t,e=""){return this.options.keyPrefix+("function"==typeof this.options.encrypt?this.options.encrypt(t):t)}isTTLKey(t){return new RegExp(this.options.ttlSuffix+"$").test(t)}getTTL(t){t=this.makeKey(t);let i=e("get")(t+this.options.ttlSuffix);return i?parseInt(i,10):0}delete(...t){const i=e("remove");t.forEach((t=>{t=this.makeKey(t),i(t),i(t+this.options.ttlSuffix)}))}_stringify(t){return t?"function"==typeof t.stringify?t.stringify():"object"==typeof t?JSON.stringify(t):"function"==typeof t.toString?t.toString():t:""}}
